const { mongoose, Schema, model } = require('mongoose')
const Express = require('express')
const morgan = require('morgan')
const express = require('express')
const indexRouter = require('./routes/index')
const app = Express()

require('dotenv').config();
app.use(morgan('dev'))
app.use(express.json())
app.use(express.urlencoded({ extended: false }))

mongoose.connect(process.env.SECRET_KEY)
  .then(() => console.log('Conectado a MongoDB'))
  .catch((error) => console.log(error))

app.use(indexRouter)

const personaSchema = new Schema({
  nombre: String,
  apellido: String,
  id: Number
})

const Persona = model('Persona', personaSchema)

app.get('/', async (req, res) => {
  const persona = await Persona.find()
  res.status(200).json(persona)
})

app.get('/:id', async (req, res) => {
  const { id } = req.params;
  const getOnePerson = await Persona.find({ id: id })
  res.status(200).json(getOnePerson)
})

app.post('/', async (req, res) => {
  const { nombre, apellido, id } = req.body
  const newPerson = await new Persona({ nombre, apellido, id })
  await newPerson.save()
  res.status(200).json(newPerson)
})

app.put('/:id', async (req, res) => {
  const { id } = req.params
  const { nombre } = req.body
  const updatePerson = await Persona.updateOne(
    { id: id },
    { $set: { nombre: nombre } })
  res.status(200).json(updatePerson)
})

app.delete('/:id', async (req, res) => {
  const { id } = req.params
  const deletePerson = await Persona.deleteOne({ id: id })
  res.status(200).json({ msg: "Perona eliminada exitosamente", deletePerson })
})

app.listen(4000)
console.log('Server is running')